#
# Sample configuration file for ISC dhcpd for Debian
#
#

# The ddns-updates-style parameter controls whether or not the server will
# attempt to do a DNS update when a lease is confirmed. We default to the
# behavior of the version 2 packages ('none', since DHCP v2 didn't
# have support for DDNS.)
ddns-update-style none;

# option definitions common to all supported networks...
option domain-name "kahlenberger.home.vpn";
option domain-name-servers 10.0.0.1;

default-lease-time 600;
max-lease-time 7200;

# If this DHCP server is the official DHCP server for the local
# network, the authoritative directive should be uncommented.
authoritative;

# Use this to send dhcp log messages to a different log file (you also
# have to hack syslog.conf to complete the redirection).
log-facility local7;

# No service will be given on this subnet, but declaring it helps the 
# DHCP server to understand the network topology.

#subnet 10.152.187.0 netmask 255.255.255.0 {
#}

# This is a very basic subnet declaration.

#subnet 10.254.239.0 netmask 255.255.255.224 {
#  range 10.254.239.10 10.254.239.20;
#  option routers rtr-239-0-1.example.org, rtr-239-0-2.example.org;
#}

# This declaration allows BOOTP clients to get dynamic addresses,
# which we don't really recommend.

#subnet 10.254.239.32 netmask 255.255.255.224 {
#  range dynamic-bootp 10.254.239.40 10.254.239.60;
#  option broadcast-address 10.254.239.31;
#  option routers rtr-239-32-1.example.org;
#}



#########################################
### Matze @Home-Netzwerk - 2015-02-18 ###
#########################################
#
#
#
#
# eth0 - DMZ Domain: kahlenberger.i - 
#        DHCP configuration for my internal subnet.
subnet 192.168.100.0 netmask 255.255.255.0 {
  range 192.168.100.201 192.168.100.254;
  option domain-name-servers 192.168.100.100;
  option domain-name "kahlenberger.i";
  option routers 192.168.100.100;
  option broadcast-address 192.168.100.255;
  default-lease-time 3600;
  max-lease-time 7200000;
}
# Host SECONDARY, DMZ 
host SECONDARY {
  hardware ethernet c0:25:06:4f:ee:a5;
  #filename "vmunix.passacaglia";
  option domain-name-servers 192.168.100.100;
  option domain-name "kahlenberger.i";
  option routers 192.168.100.100;
  option broadcast-address 192.168.100.255;
  default-lease-time 3600;
  max-lease-time 3600;
  server-name "SECONDARY.kahlenberger.home.vpn";
  fixed-address SECONDARY.kahlenberger.home.vpn;
}
# Host Android Mobile, DMZ 
host atlas {
  hardware ethernet 9C:C7:D1:34:E8:C3;
  #filename "vmunix.passacaglia";
  option domain-name-servers 192.168.100.100;
  option domain-name "kahlenberger.i";
  option domain-search "kahlenberger.home.vpn kahlenberger.vpn home.vpn vpn";
  option routers 192.168.100.100;
  option broadcast-address 192.168.100.255;
  default-lease-time 3600;
  max-lease-time 3600;
  #server-name "atlas.kahlenberger.home.vpn";
  fixed-address atlas.kahlenberger.home.vpn;
}

# eth1 - Zulu / internal Domain: kahlenberger.home.vpn - 
#        DHCP configuration for my internal subnet.
subnet 10.0.0.0 netmask 255.255.255.0 {
  range 10.0.0.129 10.0.0.139;
  option domain-name-servers 10.0.0.1;
  option domain-name "kahlenberger.home.vpn";
  option routers 10.0.0.1;
  option broadcast-address 10.0.0.255;
  default-lease-time 300;
  max-lease-time 7200000;
}

# Hosts which require special configuration options can be listed in
# host statements.   If no address is specified, the address will be
# allocated dynamically (if possible), but the host-specific information
# will still come from the host declaration.

host Mimas {
  hardware ethernet 00:1a:4b:62:d8:4f;
  #filename "vmunix.passacaglia";
  option domain-name-servers 10.0.0.1;
  option domain-name "kahlenberger.home.vpn";
  option routers 10.0.0.1;
  option broadcast-address 10.0.0.255;
  default-lease-time 300;
  max-lease-time 7200000;
  server-name "mimas.kahlenberger.home.vpn";
  fixed-address 10.0.0.10;
}

host Erriapo {
  hardware ethernet 00:24:81:47:a9:c4;
  #filename "vmunix.passacaglia";
  option domain-name-servers 10.0.0.1;
  option domain-name "kahlenberger.home.vpn";
  option routers 10.0.0.1;
  option broadcast-address 10.0.0.255;
  default-lease-time 1200;
  max-lease-time 7200000;
  server-name "erriapo.kahlenberger.home.vpn";
  fixed-address 10.0.0.11;
}
# Host Telesto(4) eth0
host Telesto {
  hardware ethernet 00:16:d4:a5:54:06;
  #filename "vmunix.passacaglia";
  option domain-name-servers 10.0.0.1;
  option domain-name "kahlenberger.home.vpn";
  option domain-search "kahlenberger.home.vpn kahlenberger.vpn home.vpn vpn";
  option routers 10.0.0.1;
  option broadcast-address 10.0.0.255;
  default-lease-time 3600;
  max-lease-time 7200000;
  server-name "telesto";
  fixed-address 10.0.0.12;
}

# Host Tethys3 
host Tethys3 {
  hardware ethernet f4:ce:46:99:4d:2a;
  #filename "vmunix.passacaglia";
  option domain-name-servers 10.0.0.1;
  option domain-name "kahlenberger.home.vpn";
  option domain-search "kahlenberger.home.vpn kahlenberger.home.vpn kahlenberger.vpn home.vpn vpn";
  option routers 10.0.0.1;
  option broadcast-address 10.0.0.255;
  default-lease-time 300;
  max-lease-time 3600;
  server-name "tethys.kahlenberger.home.vpn";
  fixed-address 10.0.0.13;
}
# Host Titan 
host Titan {
  hardware ethernet 00:1d:60:13:01:c2;
  #filename "vmunix.passacaglia";
  option domain-name-servers 10.0.0.1;
  option domain-name "kahlenberger.home.vpn";
  option domain-search "kahlenberger.home.vpn kahlenberger.home.vpn kahlenberger.vpn home.vpn vpn";
  option routers 10.0.0.1;
  option broadcast-address 10.0.0.255;
  default-lease-time 300;
  max-lease-time 3600;
  server-name "titan.kahlenberger.home.vpn";
  #fixed-address 10.0.0.13;
  fixed-address titan.kahlenberger.home.vpn;
}

# Host TabletI-Matze 

# Host TabletI-Matze 
host TabletI-Matze {
  hardware ethernet 00:e3:b2:3b:27:ad;
  #filename "vmunix.passacaglia";
#  option domain-name-servers 10.0.0.1;
#  option domain-name "kahlenberger.home.vpn";
  option routers 10.0.0.9;
  option broadcast-address 10.0.0.255;
  default-lease-time 120;
  max-lease-time 120;
#  server-name "TabletI-Matze.kahlenberger.home.vpn";
  fixed-address 10.0.0.14;
}

# Host USB WLAN-Stick Fritz!WLAN 
host Fritz-USB-Stick {
  hardware ethernet bc:05:43:07:3f:ce;
  #filename "vmunix.passacaglia";
  option domain-name-servers 10.0.0.1;
  option domain-name "kahlenberger.home.vpn";
  option routers 10.0.0.1;
  option broadcast-address 10.0.0.255;
  default-lease-time 300;
  max-lease-time 300;
  server-name "Fritz-USB-Stick.kahlenberger.home.vpn";
  fixed-address 10.0.0.199;
}
# Fixed IP addresses can also be specified for hosts.   These addresses
# should not also be listed as being available for dynamic assignment.
# Hosts for which fixed IP addresses have been specified can boot using
# BOOTP or DHCP.   Hosts for which no fixed address is specified can only
# be booted with DHCP, unless there is an address range on the subnet
# to which a BOOTP client is connected which has the dynamic-bootp flag
# set.
#host fantasia {
#  hardware ethernet 08:00:07:26:c0:a5;
#  fixed-address fantasia.fugue.com;
#}

# You can declare a class of clients and then do address allocation
# based on that.   The example below shows a case where all clients
# in a certain class get addresses on the 10.17.224/24 subnet, and all
# other clients get addresses on the 10.0.29/24 subnet.

#class "foo" {
#  match if substring (option vendor-class-identifier, 0, 4) = "SUNW";
#}

#shared-network 224-29 {
#  subnet 10.17.224.0 netmask 255.255.255.0 {
#    option routers rtr-224.example.org;
#  }
#  subnet 10.0.29.0 netmask 255.255.255.0 {
#    option routers rtr-29.example.org;
#  }
#  pool {
#    allow members of "foo";
#    range 10.17.224.10 10.17.224.250;
#  }
#  pool {
#    deny members of "foo";
#    range 10.0.29.10 10.0.29.230;
#  }
#}
